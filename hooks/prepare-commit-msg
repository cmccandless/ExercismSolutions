#!/usr/bin/env python3.6

from __future__ import print_function
import sys
import hook_utils as hut


def main(commit_file, type=None, sha1_hash=None):
    diffs = hut.get_changes()
    new_solution_tracks = set()
    revised_tracks = set()
    new_makefile_tracks = set()
    revised_makefile_tracks = set()
    new_hooks = set()
    revised_hooks = set()
    for d in diffs:
        if d.change_type == 'D' or '/' not in d.b_path:
            continue
        track, exercise = d.a_path.split('/')[:2]
        if d.change_type == 'A':
            if exercise == 'Makefile':
                new_makefile_tracks.add(track)
            elif track == 'hooks':
                new_hooks.add(exercise)
            else:
                new_solution_tracks.add(track)
        elif d.change_type == 'M':
            if exercise == 'Makefile':
                revised_makefile_tracks.add(track)
            elif track == 'hooks':
                revised_hooks.add(exercise)
            else:
                revised_tracks.add(track)

    with open(commit_file, 'r') as f:
        commit_msg = f.read()

    if commit_msg == '' or commit_msg.strip().startswith('#'):
        commit_msg_parts = []
        exercise_msg = '{tracks}: new {change_type}'
        makefile_msg = (
            '{tracks}: {change_type} Makefile{plural}'
        )
        hook_msg = 'hooks: {change_type} {tracks}'
        entries = [
            (exercise_msg, 'solutions', new_solution_tracks),
            (exercise_msg, 'revisions', revised_tracks),
            (makefile_msg, 'create', new_makefile_tracks),
            (makefile_msg, 'revise', revised_makefile_tracks),
            (hook_msg, 'add', new_hooks),
            (hook_msg, 'revise', revised_hooks),
        ]
        for fmt, change_type, tracks in entries:
            if tracks:
                try:
                    plural = len(tracks) > 1
                    tracks = ', '.join(tracks)
                except TypeError:
                    plural = False
                msg = fmt.format(
                    change_type=change_type,
                    plural='s' if plural else '',
                    tracks=tracks
                )
                commit_msg_parts.append(msg)
        commit_msg_parts.append(commit_msg)
        commit_msg = '\n'.join(commit_msg_parts)

    with open(commit_file, 'w') as f:
        f.write(commit_msg)


if __name__ == '__main__':
    main(*sys.argv[1:])
